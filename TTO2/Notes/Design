Public abstract class State
{

}



Public class MenuState
{
    public MenuState()
    {

    }

    Public Run()
    {
        Output.Print()
    }
}

Public class PlayingState
{
    Public PlayingState()
    {

    }

    Public Run()
    {
        Output.Print(welcomeMessage)
    }
}


public class DialogueLibrary()
{
    public DialogueLibrary()
    {

    }

    public DialogueLibrary(Menu currentState)
    {
        // DialogueLibrary Dictionary for MenuState
    }

    public DialogueLibrary(PlayngState currentState)
    {
        // DialogueLibrary Dictionary for PlayingState
    }

}

Public class Output()
{
    Print(x)
    {
        Console.WriteLine(x);
    }
}

State runs
Then, the state retrns the next state it wants to run.

State is sent to a Stackchecker, which checks to see if the requested 
state is at the top of the stack. If so, it pops it off.
If it's not, it puts it on the stack.

This makes it extremely important that a player navigates out the same way they came in.


